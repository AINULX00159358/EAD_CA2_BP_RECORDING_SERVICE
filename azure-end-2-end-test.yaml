pool:
  name: Azure Pipelines
  demands: npm

variables:
  trivyVersion: 0.40.0
  ScanResultsPath: trivyScan

steps:
  - task: Npm@1
    displayName: 'npm install'
    inputs:
      verbose: true
    retryCountOnTaskFailure: 2

  - task: DockerInstaller@0
    displayName: 'Install Docker 17.09.0-ce'

  - bash: |
      docker network create bpwebapp
      docker run --name mongo --rm -p 27017:27017 -d --net bpwebapp -e "MONGO_INITDB_ROOT_USERNAME=zorok" -e "MONGO_INITDB_ROOT_PASSWORD=indiaNopels" mongo:latest
    continueOnError: false
    displayName: 'start Mongo Database'

  - bash: |
      docker build --no-cache --tag bprecordingservice:CA2_TEST_V1 $(Build.SourcesDirectory)
      echo 'running docker image'
      docker run --name bprecordingservice-test -p 30256:30256 --net bpwebapp -d -e "MONGO_CONN_URL=mongodb://zorok:indiaNopels@mongo:27017" bprecordingservice:CA2_TEST_V1
    displayName: 'Start Application in Docker'
    continueOnError: false

  - script: |
       sudo apt-get install rpm
       wget -q https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
       sudo dpkg -i trivy_$(trivyVersion)_Linux-64bit.deb
       mkdir $(ScanResultsPath)
       trivy image --scanners vuln --severity CRITICAL,HIGH -o $(ScanResultsPath)/results.table bprecordingservice:CA2_TEST_V1
    displayName: 'Scan using Trivy scan'

  - bash: |
      echo "Running Cypress Test"
      ./node_modules/cypress/bin/cypress run --reporter junit --reporter-options "mochaFile=./cypress/results/TEST-bprecordingservice-Result.xml,toConsole=true"
      echo "Printing Report and workingDir in  $(System.DefaultWorkingDirectory)"
      cat ./cypress/results/TEST-bprecordingservice-Result.xml
    displayName: 'Cypress Test'
    continueOnError: true

  - bash: |
      # Write your commands here
      docker stop bprecordingservice-test || true && docker rm bprecordingservice-test || true
      docker stop mongo || true && docker rm mongo || true
    displayName: 'kill running docker copy'
    continueOnError: true
    condition: always()

  - task: PublishTestResults@2
    displayName: 'Publish Test Results for EAD_CA2_BP_RECORDING_SERVICE'
    inputs:
      testResultsFiles: '**/TEST-*.xml'
      failTaskOnFailedTests: true
      testRunTitle: 'BP_RECORDING_SERVICE-E2E-TEST'

  - task: PublishHtmlReport@1
    inputs:
      reportDir: '$(ScanResultsPath)/results.table'
